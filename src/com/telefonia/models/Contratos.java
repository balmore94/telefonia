package com.telefonia.models;
// Generated 11-22-2019 08:26:25 AM by Hibernate Tools 5.2.12.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Contratos generated by hbm2java
 */
@Entity
@SuppressWarnings("serial")
@Table(name = "contratos", catalog = "si_telefonia")
public class Contratos implements java.io.Serializable {

	private Integer idContrat;
	private Clientes clientes;
	private TipoContrato tipoContrato;
	private Usuarios usuarios;
	private Date fecInicio;
	private Date fecFin;
	private boolean estado;
	private List<Descripcion> descripcions = new ArrayList<Descripcion>();

	public Contratos() {
	}

	public Contratos(Clientes clientes, TipoContrato tipoContrato, Usuarios usuarios, Date fecInicio, Date fecFin,
			boolean estado) {
		this.clientes = clientes;
		this.tipoContrato = tipoContrato;
		this.usuarios = usuarios;
		this.fecInicio = fecInicio;
		this.fecFin = fecFin;
		this.estado = estado;
	}

	public Contratos(Clientes clientes, TipoContrato tipoContrato, Usuarios usuarios, Date fecInicio, Date fecFin,
			boolean estado, List<Descripcion> descripcions) {
		this.clientes = clientes;
		this.tipoContrato = tipoContrato;
		this.usuarios = usuarios;
		this.fecInicio = fecInicio;
		this.fecFin = fecFin;
		this.estado = estado;
		this.descripcions = descripcions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_contrat", unique = true, nullable = false)
	public Integer getIdContrat() {
		return this.idContrat;
	}

	public void setIdContrat(Integer idContrat) {
		this.idContrat = idContrat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cliente", nullable = false)
	public Clientes getClientes() {
		return this.clientes;
	}

	public void setClientes(Clientes clientes) {
		this.clientes = clientes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_c", nullable = false)
	public TipoContrato getTipoContrato() {
		return this.tipoContrato;
	}

	public void setTipoContrato(TipoContrato tipoContrato) {
		this.tipoContrato = tipoContrato;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario", nullable = false)
	public Usuarios getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Usuarios usuarios) {
		this.usuarios = usuarios;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fec_inicio", nullable = false, length = 10)
	public Date getFecInicio() {
		return this.fecInicio;
	}

	public void setFecInicio(Date fecInicio) {
		this.fecInicio = fecInicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fec_fin", nullable = false, length = 10)
	public Date getFecFin() {
		return this.fecFin;
	}

	public void setFecFin(Date fecFin) {
		this.fecFin = fecFin;
	}

	@Column(name = "estado", nullable = false)
	public boolean isEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contratos")
	public List<Descripcion> getDescripcions() {
		return this.descripcions;
	}

	public void setDescripcions(List<Descripcion> descripcions) {
		this.descripcions = descripcions;
	}

}
