package com.telefonia.models;
// Generated 11-22-2019 08:26:25 AM by Hibernate Tools 5.2.12.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Servicios generated by hbm2java
 */
@Entity
@SuppressWarnings("serial")
@Table(name = "servicios", catalog = "si_telefonia")
public class Servicios implements java.io.Serializable {

	private Integer idServicio;
	private String nombre;
	private String descripcion;
	private boolean estado;
	private List<Descripcion> descripcions = new ArrayList<Descripcion>();

	public Servicios() {
	}

	public Servicios(String nombre, String descripcion, boolean estado) {
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.estado = estado;
	}

	public Servicios(String nombre, String descripcion, boolean estado, List<Descripcion> descripcions) {
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.estado = estado;
		this.descripcions = descripcions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_servicio", unique = true, nullable = false)
	public Integer getIdServicio() {
		return this.idServicio;
	}

	public void setIdServicio(Integer idServicio) {
		this.idServicio = idServicio;
	}

	@Column(name = "nombre", nullable = false, length = 125)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "descripcion", nullable = false, length = 65535)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "estado", nullable = false)
	public boolean isEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "servicios")
	public List<Descripcion> getDescripcions() {
		return this.descripcions;
	}

	public void setDescripcions(List<Descripcion> descripcions) {
		this.descripcions = descripcions;
	}

}
