package com.telefonia.models;
// Generated 11-22-2019 08:26:25 AM by Hibernate Tools 5.2.12.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Personas generated by hbm2java
 */
@Entity
@SuppressWarnings("serial")
@Table(name = "personas", catalog = "si_telefonia", uniqueConstraints = @UniqueConstraint(columnNames = "dui"))
public class Personas implements java.io.Serializable {

	private Integer idPer;
	private Direcciones direcciones;
	private String nombre;
	private String apellido;
	private String dui;
	private String correo;
	private char estado;
	private boolean tipo;
	private String sexo;
	private Date FNacimiento;
	private String telefono;
	private List<Clientes> clienteses = new ArrayList<Clientes>();
	private List<Usuarios> usuarioses = new ArrayList<Usuarios>();

	public Personas() {
	}

	public Personas(Direcciones direcciones, String nombre, String apellido, String dui, String correo, char estado,
			boolean tipo, String sexo, Date FNacimiento, String telefono) {
		this.direcciones = direcciones;
		this.nombre = nombre;
		this.apellido = apellido;
		this.dui = dui;
		this.correo = correo;
		this.estado = estado;
		this.tipo = tipo;
		this.sexo = sexo;
		this.FNacimiento = FNacimiento;
		this.telefono = telefono;
	}

	public Personas(Direcciones direcciones, String nombre, String apellido, String dui, String correo, char estado,
			boolean tipo, String sexo, Date FNacimiento, String telefono, List<Clientes> clienteses, List<Usuarios> usuarioses) {
		this.direcciones = direcciones;
		this.nombre = nombre;
		this.apellido = apellido;
		this.dui = dui;
		this.correo = correo;
		this.estado = estado;
		this.tipo = tipo;
		this.sexo = sexo;
		this.FNacimiento = FNacimiento;
		this.telefono = telefono;
		this.clienteses = clienteses;
		this.usuarioses = usuarioses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_per", unique = true, nullable = false)
	public Integer getIdPer() {
		return this.idPer;
	}

	public void setIdPer(Integer idPer) {
		this.idPer = idPer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "direccion", nullable = false)
	public Direcciones getDirecciones() {
		return this.direcciones;
	}

	public void setDirecciones(Direcciones direcciones) {
		this.direcciones = direcciones;
	}

	@Column(name = "nombre", nullable = false, length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellido", nullable = false, length = 50)
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Column(name = "dui", unique = true, nullable = false, length = 11)
	public String getDui() {
		return this.dui;
	}

	public void setDui(String dui) {
		this.dui = dui;
	}

	@Column(name = "correo", nullable = false, length = 100)
	public String getCorreo() {
		return this.correo;
	}

	public void setCorreo(String correo) {
		this.correo = correo;
	}

	@Column(name = "estado", nullable = false, length = 1)
	public char getEstado() {
		return this.estado;
	}

	public void setEstado(char estado) {
		this.estado = estado;
	}

	@Column(name = "tipo", nullable = false)
	public boolean isTipo() {
		return this.tipo;
	}

	public void setTipo(boolean tipo) {
		this.tipo = tipo;
	}

	@Column(name = "sexo", nullable = false, length = 2)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "f_nacimiento", nullable = false, length = 10)
	public Date getFNacimiento() {
		return this.FNacimiento;
	}

	public void setFNacimiento(Date FNacimiento) {
		this.FNacimiento = FNacimiento;
	}

	@Column(name = "telefono", nullable = false, length = 12)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personas")
	public List<Clientes> getClienteses() {
		return this.clienteses;
	}

	public void setClienteses(List<Clientes> clienteses) {
		this.clienteses = clienteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personas")
	public List<Usuarios> getUsuarioses() {
		return this.usuarioses;
	}

	public void setUsuarioses(List<Usuarios> usuarioses) {
		this.usuarioses = usuarioses;
	}

}
